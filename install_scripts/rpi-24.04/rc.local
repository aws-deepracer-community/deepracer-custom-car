#!/usr/bin/env bash

# Define the PWM period
PERIOD=20000000

# Detect the PWM chip that is a symlink to something containing i2c-1
chip=""
for pwmchip_path in /sys/class/pwm/pwmchip*; do
    if [ -L "$pwmchip_path" ]; then
        target=$(readlink "$pwmchip_path")
        if [[ "$target" == *"i2c-1"* ]]; then
            chip=$(basename "$pwmchip_path" | sed 's/pwmchip//')
            echo "Detected PWM chip: pwmchip${chip} (linked to ${target})"
            break
        fi
    fi
done

if [ -z "$chip" ]; then
    echo "Error: Could not find PWM chip linked to i2c-1"
    exit 1
fi

# Cycle through all PWM channels 0-4 on detected pwmchip
for pwm in {0..4}; do
    echo "Setting up PWM${chip} channel ${pwm}"
    
    # Try to export the PWM (might fail if already exported)
    if [ -d "/sys/class/pwm/pwmchip${chip}/pwm${pwm}" ]; then
        echo "  PWM already exported"
    else
        echo "  Exporting PWM"
        echo ${pwm} > /sys/class/pwm/pwmchip${chip}/export || echo "  Failed to export (may already be in use)"
    fi
    
    # Configure the PWM
    echo "  Setting period to ${PERIOD}"
    echo ${PERIOD} > /sys/class/pwm/pwmchip${chip}/pwm${pwm}/period || echo "  Failed to set period"
    
    current_duty_cycle=$(cat /sys/class/pwm/pwmchip${chip}/pwm${pwm}/duty_cycle 2>/dev/null || echo "error")
    if [ "$current_duty_cycle" = "0" ]; then
        echo "  Duty_cycle is already 0"
    else
        echo "  Setting duty_cycle to 0"
        echo 0 > /sys/class/pwm/pwmchip${chip}/pwm${pwm}/duty_cycle || echo "  Failed to set duty_cycle"
    fi
    
    echo "  Enabling PWM"
    echo 1 > /sys/class/pwm/pwmchip${chip}/pwm${pwm}/enable || echo "  Failed to enable"
    
    echo ""
done

echo "All PWM channels on pwmchip${chip} have been configured"